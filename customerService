import java.util.List;
import java.util.Optional;
import java.springboot.exception.ResourceNotFoundException;
import java.springboot.model.customer;
import java.springboot.repository.customerRepository;
import java.springboot.service.customerService;

@Service
public class customerServiceImpl implements customerService{

	private customerRepository customerRepository;
	
	public customerServiceImpl(customerRepository customerRepository) {
		super();
		this.customerRepository = customerRepository;
	}

	@Override
	public customer savecustomer(customer customer) {
		return customerRepository.save(customer);
	}

	@Override
	public List<customer> getAllcustomers() {
		return customerRepository.findAll();
	}

	@Override
	public customer getcustomerById(long id) {
//		Optional customer = customerRepository.findById(id);
//		if(customer.isPresent()) {
//			return customer.get();
//		}else {
//			throw new ResourceNotFoundException("customer", "Id", id);
//		}
		return customerRepository.findById(id).orElseThrow(() -> 
						new ResourceNotFoundException("customer", "Id", id));
		
	}

	@Override
	public customer updatecustomer(customer customer, long id) {
		
		// we need to check whether customer with given id is exist in DB or not
		customer existingcustomer = customerRepository.findById(id).orElseThrow(
				() -> new ResourceNotFoundException("customer", "Id", id)); 
		
		existingcustomer.setFirstName(customer.getFirstName());
		existingcustomer.setLastName(customer.getLastName());
		existingcustomer.setEmail(customer.getEmail());
		// save existing customer to DB
		customerRepository.save(existingcustomer);
		return existingcustomer;
	}

	@Override
	public void deletecustomer(long id) {
		
		// check whether a customer exist in a DB or not
		customerRepository.findById(id).orElseThrow(() -> 
								new ResourceNotFoundException("customer", "Id", id));
		customerRepository.deleteById(id);
	}
	
}
